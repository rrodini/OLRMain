buildscript {
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsGradlePluginVersion"
        classpath "org.grails.plugins:hibernate5:${gormVersion}"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:3.4.7"
        classpath "gradle.plugin.com.github.erdi.webdriver-binaries:webdriver-binaries-gradle-plugin:2.6"
    }
}

group "olrmain"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"com.github.erdi.webdriver-binaries"
apply plugin:"com.bertramlabs.asset-pipeline"
apply plugin:"org.grails.grails-gsp"

repositories {
    maven { url "https://repo.grails.org/grails/core" }
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}
dependencies {
    developmentOnly("org.springframework.boot:spring-boot-devtools")
    compileOnly "io.micronaut:micronaut-inject-groovy"
    implementation "org.springframework.boot:spring-boot-starter-logging"
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation "org.springframework.boot:spring-boot-autoconfigure"
    implementation "org.grails:grails-core"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
//  1/28/2023 changed from 'provided' to 'runtimeOnly'
//    runtimeOnly "org.springframework.boot:spring-boot-starter-tomcat"
    implementation "org.grails:grails-web-boot"
    implementation "org.grails:grails-logging"
    implementation "org.grails:grails-plugin-rest"
    implementation "org.grails:grails-plugin-databinding"
    implementation "org.grails:grails-plugin-i18n"
    implementation "org.grails:grails-plugin-services"
    implementation "org.grails:grails-plugin-url-mappings"
    implementation "org.grails:grails-plugin-interceptors"
    implementation "org.grails.plugins:cache"
    implementation "org.grails.plugins:async"
    implementation "org.grails.plugins:scaffolding"
    implementation "org.grails.plugins:events"
    implementation "org.grails.plugins:hibernate5"
    implementation "org.hibernate:hibernate-core:5.6.11.Final"
    //  added  security plugin added June 4, 2019
    implementation "org.grails.plugins:spring-security-core:5.2.0"
    implementation 'org.grails.plugins:spring-security-ui:4.0.0-RC1'
    // end of new plugins
    implementation "org.grails.plugins:gsp"
    // below taken from sample Grails4App
    compileOnly "io.micronaut:micronaut-inject-groovy"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web"
//  json validation jars
    implementation "org.leadpony.justify:justify:3.1.0"   // new 3.1.0 old 0.17.0
    implementation "org.glassfish:jakarta.json:2.0.1"      // new 2.0.1 old 1.1.15
//  end of json validation jars
    runtimeOnly "org.glassfish.web:el-impl:2.1.2-b03"
//  postgres jdbc driver
    runtimeOnly "org.postgresql:postgresql:42.2.5"
//  H2 database driver
//    runtimeOnly "com.h2database:h2"
    runtimeOnly "org.apache.tomcat:tomcat-jdbc"
    runtimeOnly "javax.xml.bind:jaxb-api:2.3.1"
    runtimeOnly "com.bertramlabs.plugins:asset-pipeline-grails:3.2.4"
    testCompileOnly "io.micronaut:micronaut-inject-groovy"
    testCompileOnly "org.mockito:mockito-core"
    testCompileOnly "org.grails:grails-gorm-testing-support"
    testCompileOnly "org.grails.plugins:geb"
//  Added due to build failure
//    testCompileOnly "org.spockframework:spock-core:1.3-groovy-2.5"
//    testRuntimeOnly "org.seleniumhq.selenium:selenium-chrome-driver:$seleniumVersion"
//    testRuntimeOnly "org.seleniumhq.selenium:selenium-firefox-driver:$seleniumVersion"
//    testRuntimeOnly "org.seleniumhq.selenium:selenium-safari-driver:$seleniumSafariDriverVersion"
//
//    testCompileOnly "org.seleniumhq.selenium:selenium-remote-driver:$seleniumVersion"
//    testCompileOnly "org.seleniumhq.selenium:selenium-api:$seleniumVersion"
//    testCompileOnly "org.seleniumhq.selenium:selenium-support:$seleniumVersion"
    testCompileOnly "org.grails:grails-web-testing-support"
    testRuntimeOnly "net.sourceforge.htmlunit:htmlunit:2.18"
    testRuntimeOnly "org.seleniumhq.selenium:selenium-chrome-driver:3.14.0"
    testRuntimeOnly "org.seleniumhq.selenium:selenium-firefox-driver:3.14.0"
//  needed for Heroku deployment - be careful of Tomcat version!
//  new version of webapp-runner gives error at runtime
// DEV   implementation 'com.heroku:webapp-runner:9.0.41.0'
    implementation 'com.heroku:webapp-runner:9.0.70.0'  // new 9.0.70.0 old 9.0.41.0
// PRD    implementation 'com.github.jsimone:webapp-runner:8.5.11.3'
//    implementation 'com.github.jsimone:webapp-runner:8.5.11.3'
//  Grails 3 SSL plug - force use of HTTPS
//    implementation 'com.bertramlabs.plugins:force-ssl:3.1.1'
}

bootRun {
    ignoreExitValue true
    jvmArgs(
            '-Dspring.output.ansi.enabled=always',
            '-noverify',
            '-XX:TieredStopAtLevel=1',
            '-Xmx1024m')
    sourceResources sourceSets.main
    String springProfilesActive = 'spring.profiles.active'
    systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}

assets {
    minifyJs = true
    minifyCss = true
}
// added from blog articles grails 3 on heroku
// 3/03/2021 commented out due to gradle error: Cannot add task 'wrapper' as a task with that name already exists
//task wrapper(type: Wrapper) {
//    gradleVersion = gradleWrapperVersion
//}

task stage() {
    dependsOn clean, war
}
war.mustRunAfter clean

tasks.stage.doLast() {
    delete fileTree(dir: "build/distributions")
    delete fileTree(dir: "build/assetCompile")
    delete fileTree(dir: "build/distributions")
    delete fileTree(dir: "build/libs", exclude: "*.war")
}

//webdriverBinaries {
//    chromedriver "$chromeDriverVersion"
//    geckodriver "$geckodriverVersion"
//}

tasks.withType(GroovyCompile) {
    configure(groovyOptions) {
        forkOptions.jvmArgs = ['-Xmx1024m']
    }
}

tasks.withType(Test) {
    systemProperty "geb.env", System.getProperty('geb.env')
    systemProperty "geb.build.reportsDir", reporting.file("geb/integrationTest")
    systemProperty "webdriver.chrome.driver", System.getProperty('webdriver.chrome.driver')
    systemProperty "webdriver.gecko.driver", System.getProperty('webdriver.gecko.driver')
}

task copyToLib(type: Copy) {
    into "$buildDir/server"
    from(configurations.runtimeClasspath) {
        include "webapp-runner*"
    }
}

stage.dependsOn(copyToLib)

war {
    enabled=true
}